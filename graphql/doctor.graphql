extend type Query {

    doctor(id: ID @eq): Doctor @find

    doctors: [Doctor!]! @all

    doctorWH:
}


extend type Mutation {

    createDoctor(
        name: String!,
        email: String! @rules(apply: ["email", "unique:doctors"]),
        password: String! @rules(apply: ["min:8"]),
        specialization_id: ID!,
        phone: ID! @rules(apply: ["min:10","max:15"]),
        gender: String!
        city_id: ID!,
        avatar: String!,
        summary: String!,
        fees: Float!,
        workingHours: String!,
        averageVisitTime: ID!,
        pointStartWorkTime: DateTime,
        pointEndWorkTime: DateTime
    ): Doctor! @create

    updateDoctor(
        id: ID!,
        name: String,
        email: String @rules(apply: ["email", "unique:doctors"]),
        password: String @rules(apply: ["min:8"]),
        specialization_id: ID!,
        phone: ID @rules(apply: ["min:10","max:15"]),
        gender: String
        city_id: ID,
        avatar: String,
        summary: String,
        fees: Float,
        workingHours: String,
        averageVisitTime: ID,
        pointStartWorkTime: DateTime,
        pointEndWorkTime: DateTime
    ): Doctor @update

    deleteDoctor(id: ID! @whereKey): Doctor @delete

    upsertDoctor(id: ID!,
        name: String!,
        email: String! @rules(apply: ["email", "unique:doctors"]),
        password: String! @rules(apply: ["min:8"]),
        specialization_id: ID!,
        phone: ID @rules(apply: ["min:10","max:15"]),
        gender: String
        city_id: ID,
        avatar: String,
        summary: String,
        fees: Float,
        workingHours: String,
        averageVisitTime: ID,
        pointStartWorkTime: DateTime,
        pointEndWorkTime: DateTime
    ): Doctor @upsert


}


type Doctor {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    specialization: Specialization! @belongsTo

    city: City! @belongsTo


    staffs: [Staff]! @hasMany
    patients: [Doctors_has_patient]! @hasMany


    appointments: [Appointment]! @hasMany

    workingHours: String!

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}
